Any objects you created for this application
Constructors for those objects
Method names, return values and parameters for each object
Description of each method (be sure to include what your methods do, what their return values represent and what the parameters represent)
General algorithm for the main portion of your program (Main.java)


MemorySequence Object:

Box Layout:

    |----|----|----|----|
    | 01 | 02 | 03 | 04 |
    |----|----|----|----|
    | 05 | 06 | 07 | 08 |
    |----|----|----|----|
    | 09 | 10 | 11 | 12 |
    |----|----|----|----|
    | 13 | 14 | 15 | 16 |
    |----|----|----|----|


    InstanceVariables:
        private String[][] boxNumbers
        private String[][] blank
        private final String DIV_LINE = "|----|----|----|----|"
        private int columns
        private int rows
        private final String ANSI_RESET = "\u001B[0m"
        private final String ANSI_CYAN = "\u001B[36m"
        private static ArrayList<String> sequence = new ArrayList<String>()
        private static ArrayList<String> userInputAns = new ArrayList<String>()
        private static int score
        private boolean defaultSeq = true
        private static int seqLen
        private static int numTimesRan


    Constructor:
        MemorySequence(int c, int r)
            initialize and set the arrays of boxNumbers as well as blank according the the number of columns(c) and rows(r) given
        MemorySequence()
            initialize and set the arrays of boxNumbers as well as blank to their default values (4x4 grid)

    Methods:
        private printBox(String[][] array) return String
            will print out the memory tiles with the values of the 2D array in the parameter


        emptyBox() return String
            will print out the memory tiles with the numbers in them

        numBox() return String
            will print out the memory tiles with the numbers in them

        lightBox() String return type
            will cause one of the tiles (random) to "light up" (it will just be colored text)
             ** in the memory sequence game I will have to indicate which box is chosen
             ** will also save the sequence so the user can input it

        gameRunning()    boolean return value
            will return if the game is still running (when the user gets the sequence wrong the game is over and that is when this value is false)

        calcScore()   void return value
            will calculate the score of the player depending on the game mode

        setUserInputAns(ArrayList<String> userAns)      void return type
            will set the sequence that the user enters to the ArrayList called userInputAns

        changeSeq()
            will set the boolean variable of defaultSeq to false (happens when the user wants to define their own sequence len.)
            used to help with the calculations of scores

        clearSeqList()
            will clear the array list sequence

        clearAnswerList()
            will clear the array list userInputAns

        setSeqLen()
            will set the length of the sequence

        updateNumTimesRan(int num)
            will update the variable numTimesRan to the variable num
                for when the user has a set sequence length

        toString()    returns a String
            will return the score of the player (outputs will vary depending on the game mode)

Settings Object
    instance variables:
        private static boolean displayNum
        private final String ANSI_BLUE = "\u001B[34m"
        private final String ANSI_RED = "\u001B[31m"
        private final String ANSI_RESET = "\u001B[0m"

    Constructor:
        Settings()
            just instantiates the object

    methods:
        changeDisplayChar(String displayChar)   void return type
            change the value of the display character to either the XX's or the actual number of the box
            will also change the displayNum variable to either false or true

        returnStatus()    boolean return type
            will return the status of displayNum

        toString()    String return type
            will print out the settings along with the value of displayNum

        printInstructions()   String
            will print the instructions of the game


Main Runner Class:
    ask user if they want to play competitive or practice mode
        if play practice, they can choose between setting the size of their own grid or using a default 4x4 grid
            they will also be met with a question if they want to practice a certain sequence length or just play the default way
        will display the grid with all the numbers in them to show the user which box is which
        then display a sequence with a length of one (default way)
        if they get it correct, the sequence length increases by one (default way)
            will print their score at the end
            will print their personal best as well based on the name
        if they select their own way, they are asked to input the length of the desired sequence and a sequence of that length will be displayed
            will print if they got it correct or not

        if they play competitive they will only be able to play default play (sequence increases by one each round + default dimensions)
            they will be able to save their score with their name and get a chance to be in the leaderboard (top 5)


    methods:
        public static boolean inRange(int num, int lower, int higher)
            will return if the number is in between the lower and higher numbers

        public static void clear()
            clears the page so the next iteration of the sequence can be shown

